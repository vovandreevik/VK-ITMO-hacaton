{"version":3,"sources":["../../../../src/components/CustomSelect/CustomSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, debounce } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusWithin } from '../../hooks/useFocusWithin';\nimport { useDOM } from '../../lib/dom';\nimport type { Placement } from '../../lib/floating';\nimport { defaultFilterFn, type FilterFn } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport type { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';\nimport {\n  CustomSelectDropdown,\n  type CustomSelectDropdownProps,\n} from '../CustomSelectDropdown/CustomSelectDropdown';\nimport {\n  CustomSelectOption,\n  type CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport type { FormFieldProps } from '../FormField/FormField';\nimport type { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport type { SelectType } from '../Select/Select';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport {\n  CustomSelectClearButton,\n  type CustomSelectClearButtonProps,\n} from './CustomSelectClearButton';\nimport { CustomSelectInput, type CustomSelectInputProps } from './CustomSelectInput';\nimport styles from './CustomSelect.module.css';\n\nconst sizeYClassNames = {\n  none: styles['CustomSelect--sizeY-none'],\n  compact: styles['CustomSelect--sizeY-compact'],\n};\n\nconst findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce('CustomSelect');\n\nconst checkOptionsValueType = <T extends CustomSelectOptionInterface>(options: T[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nfunction defaultRenderOptionFn<T extends CustomSelectOptionInterface>({\n  option,\n  ...props\n}: CustomSelectRenderOption<T>): React.ReactNode {\n  return <CustomSelectOption {...props} />;\n}\n\nconst handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex<T extends CustomSelectOptionInterface>(\n  options: T[] = [],\n  value: SelectValue,\n  withClear: boolean,\n) {\n  if (withClear && value === '') {\n    return -1;\n  }\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nconst filter = <T extends CustomSelectOptionInterface>(\n  options: SelectProps<T>['options'],\n  inputValue: string,\n  filterFn: SelectProps<T>['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: React.ReactElement | string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\nexport interface CustomSelectRenderOption<T extends CustomSelectOptionInterface>\n  extends CustomSelectOptionProps {\n  option: T;\n}\n\nexport type { CustomSelectClearButtonProps };\n\nexport interface SelectProps<\n  OptionInterfaceT extends CustomSelectOptionInterface = CustomSelectOptionInterface,\n> extends NativeSelectProps,\n    Omit<FormFieldProps, 'maxHeight'>,\n    TrackerOptionsProps,\n    Pick<\n      CustomSelectDropdownProps,\n      'overscrollBehavior' | 'autoHideScrollbar' | 'autoHideScrollbarDelay'\n    >,\n    Pick<CustomSelectInputProps, 'minLength' | 'maxLength' | 'pattern' | 'readOnly'> {\n  /**\n   * ref на внутрений компонент input\n   */\n  getSelectInputRef?: React.Ref<HTMLInputElement>;\n  /**\n   * Если `true`, то при клике на `CustomSelect` в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  /**\n   * Событие изменения текстового поля\n   */\n  onInputChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  options: OptionInterfaceT[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?: false | FilterFn<OptionInterfaceT>;\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](https://vkcom.github.io/VKUI/#/CustomSelectOption?id=props)\n   *\n   * > ⚠️  Важно: cвойство опции `disabled` должно выставляться только через проп `options`.\n   * > Запрещается выставлять `disabled` проп опциям в обход `options`, иначе `CustomSelect` не будет знать об актуальном состоянии\n   * опции.\n   */\n  renderOption?: (props: CustomSelectRenderOption<OptionInterfaceT>) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Кастомная кнопка для очистки значения.\n   * Должна принимать обязательное свойство `onClick`\n   */\n  ClearButton?: React.ComponentType<CustomSelectClearButtonProps>;\n  /**\n   * Если `true`, то справа будет отображаться кнопка для очистки значения\n   */\n  allowClearButton?: boolean;\n  /**\n   * (e2e) testId кнопки очистки\n   */\n  clearButtonTestId?: string;\n  /**\n   * Отступ от выпадающего списка\n   */\n  dropdownOffsetDistance?: number;\n  /**\n   * Ширина раскрывающегося списка зависит от контента\n   */\n  dropdownAutoWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n  /**\n   * Отключает максимальную высоту по умолчанию\n   */\n  noMaxHeight?: boolean;\n  /**\n   * (e2e) testId элемента, внутри которого отображается текст выбранной опции `CustomSelect` или плейсхолдер.\n   */\n  labelTextTestId?: string;\n  nativeSelectTestId?: string;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect<OptionInterfaceT extends CustomSelectOptionInterface>(\n  props: SelectProps<OptionInterfaceT>,\n): React.ReactNode {\n  const [opened, setOpened] = React.useState(false);\n  const {\n    before,\n    name,\n    className,\n    getRef,\n    getRootRef,\n    popupDirection = 'bottom',\n    style,\n    onChange,\n    children,\n    'onInputChange': onInputChangeProp,\n    renderDropdown,\n    onOpen,\n    onClose,\n    fetching,\n    forceDropdownPortal,\n    selectType = 'default',\n    autoHideScrollbar,\n    autoHideScrollbarDelay,\n    searchable = false,\n    'renderOption': renderOptionProp = defaultRenderOptionFn,\n    'options': optionsProp,\n    emptyText = 'Ничего не найдено',\n    filterFn = defaultFilterFn,\n    'icon': iconProp,\n    ClearButton = CustomSelectClearButton,\n    allowClearButton = false,\n    dropdownOffsetDistance = 0,\n    dropdownAutoWidth = false,\n    noMaxHeight = false,\n    'aria-labelledby': ariaLabelledBy,\n    clearButtonTestId,\n    nativeSelectTestId,\n    defaultValue,\n    required,\n    getSelectInputRef,\n    overscrollBehavior,\n    ...restProps\n  } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const handleRootRef = useExternRef(containerRef, getRootRef);\n  const scrollBoxRef = React.useRef<HTMLDivElement | null>(null);\n  const selectElRef = useExternRef(getRef);\n  const optionsWrapperRef = React.useRef<HTMLDivElement>(null);\n\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | undefined>(-1);\n  const [isControlledOutside, setIsControlledOutside] = React.useState(props.value !== undefined);\n  const [inputValue, setInputValue] = React.useState('');\n  const [nativeSelectValue, setNativeSelectValue] = React.useState(\n    () => props.value ?? defaultValue ?? (allowClearButton ? '' : undefined),\n  );\n\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement>(popupDirection);\n  const [options, setOptions] = React.useState(optionsProp);\n  const [selectedOptionIndex, setSelectedOptionIndex] = React.useState<number | undefined>(\n    findSelectedIndex(optionsProp, props.value ?? defaultValue, allowClearButton),\n  );\n\n  React.useEffect(() => {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue((nativeSelectValue) => props.value ?? nativeSelectValue);\n  }, [props.value]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      options.some(({ value }) => nativeSelectValue === value) ||\n      (allowClearButton && nativeSelectValue === '')\n    ) {\n      const event = new Event('change', { bubbles: true });\n\n      selectElRef.current?.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n\n  const selected = React.useMemo(() => {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n\n  const openedClassNames = React.useMemo(\n    () =>\n      (opened &&\n        dropdownOffsetDistance === 0 &&\n        (popperPlacement.includes('top')\n          ? styles['CustomSelect--pop-up']\n          : styles['CustomSelect--pop-down'])) ||\n      undefined,\n    [dropdownOffsetDistance, opened, popperPlacement],\n  );\n\n  const scrollToElement = React.useCallback((index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const optionsWrapper = optionsWrapperRef.current;\n    const item =\n      dropdown && optionsWrapper ? (optionsWrapper.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n\n  const focusOptionByIndex = React.useCallback(\n    (index: number | undefined, scrollTo = true) => {\n      if (index === undefined || index < 0 || index > (options.length ?? 0) - 1) {\n        return;\n      }\n\n      const option = options[index];\n\n      if (option?.disabled) {\n        return;\n      }\n\n      if (scrollTo) {\n        scrollToElement(index);\n      }\n\n      // Это оптимизация, прежде всего, под `onMouseMove`\n      setFocusedOptionIndex((focusedOptionIndex) =>\n        focusedOptionIndex !== index ? index : focusedOptionIndex,\n      );\n    },\n    [options, scrollToElement],\n  );\n\n  const isValidIndex = React.useCallback(\n    (index: number) => {\n      return index >= 0 && index < (options.length ?? 0);\n    },\n    [options.length],\n  );\n\n  const setScrollBoxRef = React.useCallback(\n    (ref: HTMLDivElement | null) => {\n      scrollBoxRef.current = ref;\n\n      if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n        {\n          scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    },\n    [isValidIndex, scrollToElement, selectedOptionIndex],\n  );\n\n  const [keyboardInput, setKeyboardInput] = React.useState('');\n  const resetKeyboardInput = React.useCallback(() => {\n    setKeyboardInput('');\n  }, []);\n\n  const resetFocusedOption = React.useCallback(() => {\n    setFocusedOptionIndex(-1);\n  }, []);\n\n  const onKeyboardInput = React.useCallback(\n    (key: string) => {\n      if (!opened) {\n        setOpened(true);\n      }\n      resetFocusedOption();\n      const fullInput = keyboardInput + key;\n\n      setKeyboardInput(fullInput);\n    },\n    [keyboardInput, opened, resetFocusedOption],\n  );\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  const close = React.useCallback(() => {\n    resetKeyboardInput();\n\n    setInputValue('');\n    setOpened(false);\n    resetFocusedOption();\n    onClose?.();\n  }, [onClose, resetKeyboardInput, resetFocusedOption]);\n\n  const selectOption = React.useCallback(\n    (index: number) => {\n      const item = options[index];\n\n      setNativeSelectValue(item?.value);\n      close();\n\n      const shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync =\n        isControlledOutside &&\n        props.value !== nativeSelectValue &&\n        nativeSelectValue === item?.value;\n\n      if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {\n        const event = new Event('change', { bubbles: true });\n        selectElRef.current?.dispatchEvent(event);\n      }\n    },\n    [close, options, selectElRef, isControlledOutside, props.value, nativeSelectValue],\n  );\n\n  const selectFocused = React.useCallback(() => {\n    if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {\n      return;\n    }\n\n    selectOption(focusedOptionIndex);\n  }, [focusedOptionIndex, isValidIndex, selectOption]);\n\n  const open = React.useCallback(() => {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n\n  const onBlur = React.useCallback(() => {\n    close();\n    const event = new Event('focusout', { bubbles: true });\n    selectElRef.current?.dispatchEvent(event);\n  }, [close, selectElRef]);\n\n  const onFocus = React.useCallback(() => {\n    const event = new Event('focusin', { bubbles: true });\n    selectElRef.current?.dispatchEvent(event);\n  }, [selectElRef]);\n\n  const onClick = React.useCallback(() => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n\n  const handleKeyUp = React.useMemo(() => debounce(resetKeyboardInput, 1000), [resetKeyboardInput]);\n\n  const focusOption = React.useCallback(\n    (type: 'next' | 'prev') => {\n      let index = focusedOptionIndex;\n\n      if (type === 'next') {\n        const nextIndex = findIndexAfter(options, index);\n        index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === 'prev') {\n        const beforeIndex = findIndexBefore(options, index);\n        index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      focusOptionByIndex(index);\n    },\n    [focusOptionByIndex, focusedOptionIndex, options],\n  );\n\n  React.useEffect(\n    function updateOptionsAndSelectedOptionIndex() {\n      const value = props.value ?? nativeSelectValue ?? defaultValue;\n\n      const options =\n        searchable && inputValue !== undefined\n          ? filter(optionsProp, inputValue, filterFn)\n          : optionsProp;\n\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, value, allowClearButton));\n    },\n    [\n      filterFn,\n      inputValue,\n      nativeSelectValue,\n      optionsProp,\n      defaultValue,\n      props.value,\n      searchable,\n      allowClearButton,\n    ],\n  );\n\n  const onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = findSelectedIndex(\n      options,\n      e.currentTarget.value,\n      allowClearButton,\n    );\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange?.(e);\n    }\n  };\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onInputChangeProp && onInputChangeProp(e);\n\n      const options = filter(optionsProp, e.target.value, filterFn);\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n\n      setInputValue(e.target.value);\n    },\n    [filterFn, nativeSelectValue, onInputChangeProp, optionsProp, allowClearButton],\n  );\n\n  const areOptionsShown = React.useCallback(() => {\n    return scrollBoxRef.current !== null;\n  }, []);\n\n  const handleKeyDownSelect = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key.length === 1 && event.key !== ' ') {\n        onKeyboardInput(event.key);\n        return;\n      }\n\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          if (opened) {\n            areOptionsShown() && focusOption('prev');\n          } else {\n            open();\n          }\n          break;\n        case 'ArrowDown':\n          if (opened) {\n            areOptionsShown() && focusOption('next');\n          } else {\n            open();\n          }\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Backspace':\n        case 'Delete': {\n          if (!opened) {\n            setOpened(true);\n          }\n          resetFocusedOption();\n\n          break;\n        }\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          if (opened) {\n            areOptionsShown() && selectFocused();\n          } else {\n            open();\n          }\n          break;\n      }\n    },\n    [\n      areOptionsShown,\n      close,\n      focusOption,\n      onKeyboardInput,\n      open,\n      opened,\n      selectFocused,\n      resetFocusedOption,\n    ],\n  );\n\n  const handleOptionClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const index = Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget,\n      );\n      const option = options[index];\n\n      if (option && !option.disabled) {\n        selectOption(index);\n      }\n    },\n    [options, selectOption],\n  );\n\n  const prevMousePositionRef = React.useRef<{\n    x: React.MouseEvent['clientX'];\n    y: React.MouseEvent['clientY'];\n  }>({ x: 0, y: 0 });\n  const focusOptionOnMouseMove = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>, index: number) => {\n      const isMouseChangedPosition =\n        Math.abs(prevMousePositionRef.current.x - e.clientX) >= 1 ||\n        Math.abs(prevMousePositionRef.current.y - e.clientY) >= 1;\n\n      if (isMouseChangedPosition) {\n        focusOptionByIndex(index, false);\n      }\n\n      prevMousePositionRef.current = { x: e.clientX, y: e.clientY };\n    },\n    [focusOptionByIndex],\n  );\n\n  const popupAriaId = React.useId();\n  const renderOption = React.useCallback(\n    (option: OptionInterfaceT, index: number) => {\n      const hovered = index === focusedOptionIndex;\n      const selected = index === selectedOptionIndex;\n\n      return (\n        <React.Fragment key={`${typeof option.value}-${option.value}`}>\n          {renderOptionProp({\n            option,\n            hovered,\n            children: option.label,\n            selected,\n            disabled: option.disabled,\n            onClick: handleOptionClick,\n            onMouseDown: handleOptionDown,\n            // Используем `onMouseMove` вместо `onMouseEnter/onMouseOver`.\n            // Потому что если при навигации с клавиатуры курсор наведён на\n            // список, то при первом автоматическом скролле списка вызывается событие MouseOver/MouseEnter\n            // обработчик которого фокусирует опцию под курсором, хотя при навигация с клавиатуры пользователь мог уйти дальше по списку, это путает.\n            // Причём координаты события меняются на пару пикселей по сравнению с прошлым вызовом,\n            // а значит нельзя на них опираться, чтобы запретить обработку такого события.\n            // C mousemove такой проблемы нет, что позволяет реализовать поведение при наведении с клавиатуры и при наведении мышью идентично `<select>`.\n            onMouseMove: (e) => focusOptionOnMouseMove(e, index),\n            id: `${popupAriaId}-${option.value}`,\n          })}\n        </React.Fragment>\n      );\n    },\n    [\n      focusedOptionIndex,\n      handleOptionClick,\n      focusOptionOnMouseMove,\n      renderOptionProp,\n      selectedOptionIndex,\n      popupAriaId,\n    ],\n  );\n\n  const resolvedContent = React.useMemo(() => {\n    const defaultDropdownContent =\n      options.length > 0 ? (\n        <div ref={optionsWrapperRef}>{options.map(renderOption)}</div>\n      ) : (\n        <Footnote className={styles['CustomSelect__empty']}>{emptyText}</Footnote>\n      );\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({ defaultDropdownContent });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n\n  const selectInputRef = useExternRef(getSelectInputRef);\n  const focusOnInputTimerRef = React.useRef<ReturnType<typeof setTimeout>>();\n  const focusOnInput = React.useCallback(() => {\n    clearTimeout(focusOnInputTimerRef.current);\n\n    focusOnInputTimerRef.current = setTimeout(() => {\n      selectInputRef.current && selectInputRef.current.focus();\n    }, 0);\n  }, [selectInputRef]);\n  useIsomorphicLayoutEffect(function clearFocusOnInputTimer() {\n    return () => {\n      clearTimeout(focusOnInputTimerRef.current);\n    };\n  }, []);\n\n  const controlledValueSet = isControlledOutside && props.value !== '';\n  const uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== '';\n  const clearButtonShown =\n    allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);\n\n  const clearButton = React.useMemo(() => {\n    if (!clearButtonShown) {\n      return null;\n    }\n\n    return (\n      <ClearButton\n        className={iconProp === undefined ? styles['CustomSelect--clear-icon'] : undefined}\n        onClick={function clearSelectState() {\n          setNativeSelectValue('');\n          setInputValue('');\n          focusOnInput();\n        }}\n        disabled={restProps.disabled}\n        data-testid={clearButtonTestId}\n      />\n    );\n  }, [\n    clearButtonShown,\n    ClearButton,\n    iconProp,\n    restProps.disabled,\n    clearButtonTestId,\n    focusOnInput,\n  ]);\n\n  const icon = React.useMemo(() => {\n    if (iconProp !== undefined) {\n      return iconProp;\n    }\n\n    return (\n      <DropdownIcon\n        className={clearButtonShown ? styles['CustomSelect__dropdown-icon'] : undefined}\n        opened={opened}\n      />\n    );\n  }, [clearButtonShown, iconProp, opened]);\n\n  const afterIcons = (icon || clearButtonShown) && (\n    <React.Fragment>\n      {clearButton}\n      {icon}\n    </React.Fragment>\n  );\n\n  const { document } = useDOM();\n  const passClickAndFocusToInputOnClick = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      // Раньше внешней оберткой CustomSelect был <label>, что позволяло по клику в любую область CustomSelect,\n      // даже где нету интерактивного элемента, фокусировать <input> и передавать на него событие клика.\n      // Так как мы больше не оборачиваем CustomSelect в <label>, то для обертки CustomSelect мы симулируем работу <label>.\n      // передаем фокус и клик по <input>, если пользователь кликнул в зоне обертки.\n      // В <label> мы не больше не оборачиваем, потому что это заставляет скринридер\n      // дважды произносить текст выбранной опции при фокусе, если CustomSelect связан с внешним <label>.\n      // Воспроизводится в некоторых версиях Chrome, при навигации по странице с помощью стрелок.\n      // Договорились со специалистом по доступности убрать <label>-обёртки из Select и CustomSelect\n\n      if (!selectInputRef.current || !document) {\n        return;\n      }\n\n      const clickTargetIsNotAnInput = e.target !== selectInputRef.current;\n      if (clickTargetIsNotAnInput) {\n        selectInputRef.current.click();\n\n        const inputIsNotFocused = document.activeElement !== selectInputRef.current;\n        if (inputIsNotFocused) {\n          focusOnInput();\n        }\n      }\n    },\n    [document, focusOnInput, selectInputRef],\n  );\n\n  const preventInputBlurWhenClickInsideFocusedSelectArea = (\n    e: React.MouseEvent<HTMLDivElement>,\n  ) => {\n    // Так как инпут больше не оборачивается пустым лэйблом, то клик внутри обертки,\n    // но вне инпута (например по иконке дропдауна), будет убирать фокус с инпута.\n    // Чтобы в такой ситуации отключить blur инпута мы превентим mousedown событие обёртки\n    const isInputFocused = document && document.activeElement === selectInputRef.current;\n    if (isInputFocused) {\n      e.preventDefault();\n    }\n  };\n\n  const ariaActiveDescendantOptionIndex: undefined | number =\n    focusedOptionIndex !== -1 ? focusedOptionIndex : undefined;\n  const ariaActiveDescendantId =\n    ariaActiveDescendantOptionIndex !== undefined\n      ? options[ariaActiveDescendantOptionIndex] && options[ariaActiveDescendantOptionIndex].value\n      : null;\n\n  const selectInputAriaProps: React.HTMLAttributes<HTMLElement> = {\n    'role': 'combobox',\n    'aria-controls': popupAriaId,\n    'aria-owns': popupAriaId,\n    'aria-expanded': opened,\n    'aria-activedescendant':\n      ariaActiveDescendantId && opened ? `${popupAriaId}-${ariaActiveDescendantId}` : undefined,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-haspopup': 'listbox',\n    'aria-autocomplete': 'none',\n  };\n\n  const focusWithin = useFocusWithin(handleRootRef);\n\n  return (\n    <div\n      className={classNames(\n        styles['CustomSelect'],\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      ref={handleRootRef}\n      onClick={passClickAndFocusToInputOnClick}\n      onMouseDown={preventInputBlurWhenClickInsideFocusedSelectArea}\n    >\n      {focusWithin && selected && !opened && (\n        <VisuallyHidden aria-live=\"polite\">{selected.label}</VisuallyHidden>\n      )}\n      <CustomSelectInput\n        autoComplete=\"off\"\n        autoCapitalize=\"none\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        {...restProps}\n        {...selectInputAriaProps}\n        getRef={selectInputRef}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        className={openedClassNames}\n        readOnly={!searchable}\n        fetching={fetching}\n        value={inputValue}\n        onKeyUp={handleKeyUp}\n        onKeyDown={handleKeyDownSelect}\n        onChange={onInputChange}\n        onClick={onClick}\n        before={before}\n        after={afterIcons}\n        selectType={selectType}\n      >\n        {selected?.label}\n      </CustomSelectInput>\n      <select\n        ref={selectElRef}\n        name={name}\n        onChange={onNativeSelectChange}\n        onBlur={props.onBlur}\n        onFocus={props.onFocus}\n        onClick={props.onClick}\n        value={nativeSelectValue}\n        aria-hidden\n        className={styles['CustomSelect__control']}\n        data-testid={nativeSelectTestId}\n        required={required}\n      >\n        {allowClearButton && <option key=\"\" value=\"\" />}\n        {optionsProp.map((item) => (\n          <option key={`${item.value}`} value={item.value} />\n        ))}\n      </select>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={containerRef}\n          placement={popperPlacement}\n          scrollBoxRef={setScrollBoxRef}\n          onPlacementChange={setPopperPlacement}\n          onMouseLeave={resetFocusedOption}\n          fetching={fetching}\n          overscrollBehavior={overscrollBehavior}\n          offsetDistance={dropdownOffsetDistance}\n          autoWidth={dropdownAutoWidth}\n          forcePortal={forceDropdownPortal}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n          noMaxHeight={noMaxHeight}\n          role=\"listbox\"\n          id={popupAriaId}\n          aria-labelledby={ariaLabelledBy}\n          tabIndex={-1}\n        >\n          {resolvedContent}\n        </CustomSelectDropdown>\n      )}\n    </div>\n  );\n}\n"],"names":["CustomSelect","sizeYClassNames","none","compact","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","warn","warnOnce","checkOptionsValueType","Set","map","item","value","size","defaultRenderOptionFn","props","CustomSelectOption","handleOptionDown","e","preventDefault","findSelectedIndex","withClear","Number","filter","inputValue","filterFn","opened","setOpened","React","useState","before","name","className","getRef","getRootRef","popupDirection","style","onChange","children","onInputChangeProp","renderDropdown","onOpen","onClose","fetching","forceDropdownPortal","selectType","autoHideScrollbar","autoHideScrollbarDelay","searchable","renderOptionProp","optionsProp","emptyText","defaultFilterFn","iconProp","ClearButton","CustomSelectClearButton","allowClearButton","dropdownOffsetDistance","dropdownAutoWidth","noMaxHeight","ariaLabelledBy","clearButtonTestId","nativeSelectTestId","defaultValue","required","getSelectInputRef","overscrollBehavior","restProps","process","env","NODE_ENV","sizeY","useAdaptivity","containerRef","useRef","handleRootRef","useExternRef","scrollBoxRef","selectElRef","optionsWrapperRef","focusedOptionIndex","setFocusedOptionIndex","isControlledOutside","setIsControlledOutside","undefined","setInputValue","nativeSelectValue","setNativeSelectValue","popperPlacement","setPopperPlacement","setOptions","selectedOptionIndex","setSelectedOptionIndex","useEffect","useIsomorphicLayoutEffect","some","event","Event","bubbles","current","dispatchEvent","selected","useMemo","openedClassNames","includes","scrollToElement","useCallback","index","center","dropdown","optionsWrapper","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","scrollTo","isValidIndex","setScrollBoxRef","ref","keyboardInput","setKeyboardInput","resetKeyboardInput","resetFocusedOption","onKeyboardInput","key","fullInput","close","selectOption","shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync","selectFocused","open","onBlur","onFocus","onClick","handleKeyUp","debounce","focusOption","type","nextIndex","beforeIndex","updateOptionsAndSelectedOptionIndex","onNativeSelectChange","newSelectedOptionIndex","currentTarget","onInputChange","target","areOptionsShown","handleKeyDownSelect","handleOptionClick","Array","prototype","indexOf","call","parentNode","prevMousePositionRef","x","y","focusOptionOnMouseMove","isMouseChangedPosition","Math","abs","clientX","clientY","popupAriaId","useId","renderOption","hovered","Fragment","label","onMouseDown","onMouseMove","id","resolvedContent","defaultDropdownContent","div","Footnote","selectInputRef","focusOnInputTimerRef","focusOnInput","clearTimeout","setTimeout","focus","clearFocusOnInputTimer","controlledValueSet","uncontrolledValueSet","clearButtonShown","clearButton","clearSelectState","data-testid","icon","DropdownIcon","afterIcons","document","useDOM","passClickAndFocusToInputOnClick","clickTargetIsNotAnInput","click","inputIsNotFocused","activeElement","preventInputBlurWhenClickInsideFocusedSelectArea","isInputFocused","ariaActiveDescendantOptionIndex","ariaActiveDescendantId","selectInputAriaProps","focusWithin","useFocusWithin","classNames","VisuallyHidden","aria-live","CustomSelectInput","autoComplete","autoCapitalize","autoCorrect","spellCheck","readOnly","onKeyUp","onKeyDown","after","select","aria-hidden","CustomSelectDropdown","targetRef","placement","onPlacementChange","onMouseLeave","offsetDistance","autoWidth","forcePortal","role","aria-labelledby","tabIndex"],"mappings":"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"}